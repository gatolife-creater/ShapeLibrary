var Manager=function(){function Manager(){}return Manager.displayError=function(conditions){for(var message="ConditionalError: You must follow the following rules:",_i=0,conditions_1=conditions;_i<conditions_1.length;_i++){var condition=conditions_1[_i];message+="\n\t".concat(condition)}throw message},Manager}(),Point=function(){function Point(x,y){this.x=x,this.y=y}return Point.dist=function(p1,p2){return Math.sqrt(Math.pow(p2.x-p1.x,2)+Math.pow(p2.y-p1.y,2))},Point.getMidpoint=function(p1,p2){return new Point((p1.x+p2.x)/2,(p1.y+p2.y)/2)},Point.getSymmetricPoint=function(p,center){var x=center.x-p.x,y=center.y-p.y;return new Point(center.x+x,center.y+y)},Point.getBarycenter=function(p1,p2,p3){return new Point((p1.x+p2.x+p3.x)/3,(p1.y+p2.y+p3.y)/3)},Point.getCircumcenter=function(p1,p2,p3){var l1=new Line(p1,p2),l2=new Line(p2,p3),perpendicularBisector1=l1.getPerpendicularBisector(),perpendicularBisector2=l2.getPerpendicularBisector();return perpendicularBisector1.getIntersection(perpendicularBisector2)},Point.getOrthocenter=function(p1,p2,p3){var x1=p1.x,y1=p1.y,x2=p2.x,y2=p2.y,x3=p3.x,y3=p3.y,l1=new Linear("".concat((y2-y1)/(x2-x1),"x+").concat(-(y2-y1)/(x2-x1)+y1)),l2=new Linear("".concat((y3-y2)/(x3-x2),"x+").concat(-(y3-y2)/(x3-x2)+y2)),perpendicularLinear1=l1.getPerpendicularLinear(p3),perpendicularLinear2=l2.getPerpendicularLinear(p1);return perpendicularLinear1.getIntersection(perpendicularLinear2)},Point.getInnerCenter=function(p1,p2,p3){var A=p1,B=p2,C=p3,AB=new Line(A,B),BC=new Line(B,C),CA=new Line(C,A),P=BC.getDividingPoint(AB.getLength(),CA.getLength()),Q=CA.getDividingPoint(BC.getLength(),AB.getLength()),AP=new Line(A,P),BQ=new Line(B,Q);return AP.getIntersection(BQ)},Point.getExcenters=function(p1,p2,p3){var A=p1,B=p2,C=p3,BA=new Line(A,B),CB=new Line(B,C),AC=new Line(C,A),P=CB.getDividingPoint(BA.getLength(),-AC.getLength()),Q=BA.getDividingPoint(AC.getLength(),-CB.getLength()),R=AC.getDividingPoint(CB.getLength(),-BA.getLength()),AP=new Line(A,P),CQ=new Line(C,Q),BR=new Line(B,R);return[AP.getIntersection(CQ),CQ.getIntersection(BR),BR.getIntersection(AP)]},Point.prototype.magnify=function(center,magnification){var l1,p1=new Line(center,this).getDividingPoint(-magnification,magnification-1);return new Point(p1.x,p1.y)},Point.O=function(){return new Point(0,0)},Point.prototype.draw=function(){point(this.x,this.y)},Point}(),Line=function(){function Line(start,end){this.start=start,this.end=end}return Line.prototype.getMidpoint=function(){return Point.getMidpoint(this.start,this.end)},Line.prototype.getInteriorPoint=function(m,n){return m<=0||n<=0?Manager.displayError(["m > 0","n > 0"]):new Point((this.start.x*n+this.end.x*m)/(m+n),(this.start.y*n+this.end.y*m)/(m+n))},Line.prototype.getExteriorPoint=function(m,n){return m<=0||n<=0?Manager.displayError(["m > 0","n > 0"]):new Point((-this.start.x*n+this.end.x*m)/(m-n),(-this.start.y*n+this.end.y*m)/(m-n))},Line.prototype.getDividingPoint=function(m,n){return new Point((this.start.x*n+this.end.x*m)/(m+n),(this.start.y*n+this.end.y*m)/(m+n))},Line.prototype.getLength=function(){return Point.dist(this.start,this.end)},Line.prototype.getDistBetweenPoint=function(p){var a=(this.end.y-this.start.y)/(this.end.x-this.start.x),b=-1,c=this.start.y-a*this.start.x;return a===1/0?Math.abs(this.start.x-p.x):Math.abs(a*p.x+b*p.y+c)/Math.sqrt(Math.pow(a,2)+Math.pow(b,2))},Line.prototype.getIntersection=function(l){var a=(l.end.y-l.start.y)/(l.end.x-l.start.x),b=l.start.y-(l.end.y-l.start.y)/(l.end.x-l.start.x)*l.start.x,c=(this.end.y-this.start.y)/(this.end.x-this.start.x),d=this.start.y-(this.end.y-this.start.y)/(this.end.x-this.start.x)*this.start.x;return a===c?new Point(NaN,NaN):a===1/0?new Point(l.start.x,c*l.start.x+d):c===1/0?new Point(this.start.x,a*this.start.x+b):new Point((d-b)/(a-c),a*(d-b)/(a-c)+b)},Line.prototype.getIntersectionStrict=function(l){var x1=this.start.x,y1=this.start.y,x2=this.end.x,y2=this.end.y,x3=l.start.x,y3=l.start.y,x4=l.end.x,y4=l.end.y,a1=(y2-y1)/(x2-x1),a2=(y4-y3)/(x4-x3),x=(a1*x1-y1-a2*x3+y3)/(a1-a2),y=(y2-y1)/(x2-x1)*(x-x1)+y1;return Math.abs(a1)===Math.abs(a2)?new Point(NaN,NaN):x>Math.max(x1,x2)||x>Math.max(x3,x4)||y>Math.max(y1,y2)||y>Math.max(y3,y4)||x<Math.min(x1,x2)||x<Math.min(x3,x4)||x<Math.min(x1,x2)||y<Math.min(y3,y4)?new Point(NaN,NaN):new Point(x,y)},Line.prototype.getPerpendicularBisector=function(){var x1=this.start.x,y1=this.start.y,x2=this.end.x,y2=this.end.y,linear;return new Linear("".concat((y2-y1)/(x2-x1),"x+").concat(-(y2-y1)/(x2-x1)*x1+y1)).getPerpendicularLinear(this.getMidpoint())},Line.prototype.magnify=function(center,magnification){var l1=new Line(center,this.start),l2=new Line(center,this.end),p1,p2;return new Line(l1.getDividingPoint(-magnification,magnification-1),l2.getDividingPoint(-magnification,magnification-1))},Line.prototype.draw=function(){line(this.start.x,this.start.y,this.end.x,this.end.y)},Line}(),Triangle=function(){function Triangle(p1,p2,p3){this.p1=p1,this.p2=p2,this.p3=p3,this.l1=new Line(this.p1,this.p2),this.l2=new Line(this.p2,this.p3),this.l3=new Line(this.p3,this.p1)}return Triangle.prototype.getBarycenter=function(){return Point.getBarycenter(this.p1,this.p2,this.p3)},Triangle.prototype.getCircumcenter=function(){return Point.getCircumcenter(this.p1,this.p2,this.p3)},Triangle.prototype.getOrthocenter=function(){return Point.getOrthocenter(this.p1,this.p2,this.p3)},Triangle.prototype.getInnerCenter=function(){return Point.getInnerCenter(this.p1,this.p2,this.p3)},Triangle.prototype.getExcenters=function(){return Point.getExcenters(this.p1,this.p2,this.p3)},Triangle.prototype.getAroundLength=function(){var p1=new Line(this.p1,this.p2),p2=new Line(this.p2,this.p3),p3=new Line(this.p3,this.p1);return p1.getLength()+p2.getLength()+p3.getLength()},Triangle.prototype.getArea=function(){return.5*Math.abs((this.p1.x-this.p3.x)*(this.p2.y-this.p3.y)-(this.p2.x-this.p3.x)*(this.p1.y-this.p3.y))},Triangle.prototype.getSymmetricTriangle=function(center){return new Triangle(Point.getSymmetricPoint(this.p1,center),Point.getSymmetricPoint(this.p2,center),Point.getSymmetricPoint(this.p3,center))},Triangle.prototype.magnify=function(center,magnification){var l1=new Line(center,this.p1),l2=new Line(center,this.p2),l3=new Line(center,this.p3),p1,p2,p3;return new Triangle(l1.getDividingPoint(-magnification,magnification-1),l2.getDividingPoint(-magnification,magnification-1),l3.getDividingPoint(-magnification,magnification-1))},Triangle.prototype.draw=function(){triangle(this.p1.x,this.p1.y,this.p2.x,this.p2.y,this.p3.x,this.p3.y)},Triangle}(),Quad=function(){function Quad(p1,p2,p3,p4){this.p1=p1,this.p2=p2,this.p3=p3,this.p4=p4,this.l1=new Line(this.p1,this.p2),this.l2=new Line(this.p2,this.p3),this.l3=new Line(this.p3,this.p4),this.l4=new Line(this.p4,this.p1)}return Quad.prototype.getArea=function(){var triangle1=new Triangle(this.p1,this.p2,this.p3),triangle2=new Triangle(this.p2,this.p3,this.p4);return triangle1.getArea()+triangle2.getArea()},Quad.prototype.getAroundLength=function(){var l1=new Line(this.p1,this.p2),l2=new Line(this.p2,this.p3),l3=new Line(this.p3,this.p4),l4=new Line(this.p4,this.p1);return l1.getLength()+l2.getLength()+l3.getLength()+l4.getLength()},Quad.prototype.getSymmetricQuad=function(center){return new Quad(Point.getSymmetricPoint(this.p1,center),Point.getSymmetricPoint(this.p2,center),Point.getSymmetricPoint(this.p3,center),Point.getSymmetricPoint(this.p4,center))},Quad.prototype.magnify=function(center,magnification){var l1=new Line(center,this.p1),l2=new Line(center,this.p2),l3=new Line(center,this.p3),l4=new Line(center,this.p4),p1,p2,p3,p4;return new Quad(l1.getDividingPoint(-magnification,magnification-1),l2.getDividingPoint(-magnification,magnification-1),l3.getDividingPoint(-magnification,magnification-1),l4.getDividingPoint(-magnification,magnification-1))},Quad.prototype.draw=function(){beginShape(),vertex(this.p1.x,this.p1.y),vertex(this.p2.x,this.p2.y),vertex(this.p3.x,this.p3.y),vertex(this.p4.x,this.p4.y),endShape(CLOSE)},Quad}(),Polygon=function(){function Polygon(points){this.points=points,this.lines=[];for(var i=0;i<this.points.length;i++)i<this.points.length-1?this.lines.push(new Line(this.points[i],this.points[i+1])):this.lines.push(new Line(this.points[i],this.points[0]))}return Polygon.prototype.getAroundLength=function(){for(var result=0,_i=0,_a=this.lines;_i<_a.length;_i++){var line;result+=_a[_i].getLength()}return result},Polygon.prototype.getSymmetricPolygon=function(center){for(var points=[],_i=0,_a=this.points;_i<_a.length;_i++){var point=_a[_i];points.push(Point.getSymmetricPoint(point,center))}return new Polygon(points)},Polygon.prototype.magnify=function(center,magnification){for(var magnifiedPoints=[],_i=0,_a=this.points;_i<_a.length;_i++){var point=_a[_i],l,p=new Line(center,point).getDividingPoint(-magnification,magnification-1);magnifiedPoints.push(p)}return new Polygon(magnifiedPoints)},Polygon.prototype.draw=function(){beginShape();for(var _i=0,_a=this.points;_i<_a.length;_i++){var point=_a[_i];vertex(point.x,point.y)}endShape(CLOSE)},Polygon}(),Circle=function(){function Circle(x,y,r){this.x=x,this.y=y,this.center=new Point(x,y),this.r=r,this.d=2*r}return Circle.prototype.getAround=function(){return 2*Math.PI*this.r},Circle.prototype.getArea=function(){return Math.PI*Math.pow(this.r,2)},Circle.prototype.getSymmetricCircle=function(center){var p=this.center,_a=Point.getSymmetricPoint(p,center),x,y;return new Circle(_a.x,_a.y,this.r)},Circle.prototype.magnify=function(center,magnification){var l1,p=new Line(center,this).getDividingPoint(-magnification,magnification-1);return new Circle(p.x,p.y,this.r*magnification)},Circle.prototype.draw=function(){circle(this.x,this.y,this.d)},Circle}(),Point3D=function(){function Point3D(x,y,z){this.x=x,this.y=y,this.z=z}return Point3D.dist=function(p1,p2){return Math.sqrt(Math.pow(p2.x-p1.x,2)+Math.pow(p2.y-p1.y,2)+Math.pow(p2.z-p1.z,2))},Point3D.getMidpoint=function(p1,p2){return new Point3D((p1.x+p2.x)/2,(p1.y+p2.y)/2,(p1.z+p2.z)/2)},Point3D.O=function(){return new Point3D(0,0,0)},Point3D.prototype.draw=function(){point(this.x,this.y,this.z)},Point3D}(),Line3D=function(){function Line3D(start,end){this.start=start,this.end=end}return Line3D.prototype.getLength=function(){return Point3D.dist(this.start,this.end)},Line3D.prototype.draw=function(){line(this.start.x,this.start.y,this.start.z,this.end.x,this.end.y,this.end.z)},Line3D}(),Triangle3D=function(){function Triangle3D(p1,p2,p3){this.p1=p1,this.p2=p2,this.p3=p3,this.l1=new Line3D(p1,p2),this.l2=new Line3D(p2,p3),this.l3=new Line3D(p3,p1)}return Triangle3D.prototype.draw=function(){beginShape(),vertex(this.p1.x,this.p1.y,this.p1.z),vertex(this.p2.x,this.p2.y,this.p2.z),vertex(this.p3.x,this.p3.y,this.p3.z),endShape(CLOSE)},Triangle3D}(),Quad3D=function(){function Quad3D(p1,p2,p3,p4){this.p1=p1,this.p2=p2,this.p3=p3,this.p4=p4,this.l1=new Line3D(this.p1,this.p2),this.l2=new Line3D(this.p2,this.p3),this.l3=new Line3D(this.p3,this.p4),this.l4=new Line3D(this.p4,this.p1)}return Quad3D.prototype.draw=function(){beginShape(),vertex(this.p1.x,this.p1.y,this.p1.z),vertex(this.p2.x,this.p2.y,this.p2.z),vertex(this.p3.x,this.p3.y,this.p3.z),vertex(this.p4.x,this.p4.y,this.p4.z),endShape(CLOSE)},Quad3D}(),Box=function(){function Box(x,y,z,w,h,d){this.x=x,this.y=y,this.z=z,this.w=w,this.h=h,this.d=d}return Box.prototype.getSurfaceArea=function(){return 2*(this.w*this.h+this.h*this.d+this.d*this.w)},Box.prototype.getVolume=function(){return this.w*this.h*this.d},Box.prototype.draw=function(){push(),translate(this.x,this.y,this.z),box(this.w,this.h,this.d),pop()},Box}(),Sphere=function(){function Sphere(x,y,z,r){this.x=x,this.y=y,this.z=z,this.r=r}return Sphere.prototype.getSurfaceArea=function(){return 4*Math.PI*Math.pow(this.r,2)},Sphere.prototype.getVolume=function(){return 4*Math.PI*Math.pow(this.r,3)/3},Sphere.prototype.draw=function(){push(),translate(this.x,this.y,this.z),sphere(this.r),pop()},Sphere}(),Linear=function(){function Linear(formula){this.setForms(formula),this.slope,this.yIntercept,this.a,this.b,this.vertexForm,this.standardForm}return Linear.prototype.setForms=function(formula){var array=formula.replace(/\s/g,"").split(/\+|x/).filter((function(v){return v}));this.slope=Number(array[0]),this.yIntercept=Number(array[1]);var stringSlope=String(this.slope),stringYIntercept=this.yIntercept>=0?"+"+String(this.yIntercept):String(this.yIntercept);this.vertexForm="".concat(stringSlope,"x").concat(stringYIntercept)},Linear.prototype.getY=function(x){return this.slope*x+this.yIntercept},Linear.prototype.getIntersection=function(linear){var a=this.slope,b=this.yIntercept,c=linear.slope,d=linear.yIntercept;return new Point((d-b)/(a-c),a*(d-b)/(a-c)+b)},Linear.prototype.getPerpendicularLinear=function(p){var a=this.slope,x1=p.x,y1=p.y;return new Linear("".concat(-1/a,"x+").concat(x1/a+y1))},Linear.prototype.magnify=function(center,magnification){var l1=new Line(center,new Point(0,this.yIntercept)),l2=new Line(center,new Point(5,this.getY(5))),p1=l1.getDividingPoint(-magnification,magnification-1),p2=l2.getDividingPoint(-magnification,magnification-1);return Linear.estimateLinearByTwoPoints(p1,p2)},Linear.estimateLinearByTwoPoints=function(p1,p2){var a=(p2.y-p1.y)/(p2.x-p1.x),b=p1.y-a*p1.x;return new Linear("".concat(a,"x+").concat(b))},Linear.prototype.draw=function(min,max){beginShape();for(var x=min;x<max;x++){var y=this.getY(x);vertex(x,y)}endShape()},Linear}(),Quadratic=function(){function Quadratic(formula){this.setForms(formula),this.a,this.b,this.c,this.p,this.q,this.vertexForm,this.standardForm}return Quadratic.judgeForm=function(formula){return formula.match(/x\^2/g)&&formula.match(/x/g)?"vertex":formula.match(/x/g)&&formula.match(/\(/g)&&formula.match(/\)/g)&&formula.match(/\^2/g)?"standard":Manager.displayError(["You MUST use following:","x","(",")","^2"])},Quadratic.prototype.setForms=function(formula){if("vertex"===Quadratic.judgeForm(formula)){var array=formula.replace(/\s/g,"").split(/\+|x\^2|x/).filter((function(v){return v}));this.a=Number(array[0]),this.b=Number(array[1]),this.c=Number(array[2]);var stringA=String(this.a),stringB=this.b>=0?"+"+String(this.b):String(this.b),stringC=this.c>=0?"+"+String(this.c):String(this.c);this.vertexForm="".concat(stringA,"x^2").concat(stringB,"x").concat(stringC),this.p=-this.b/(2*this.a),this.q=-(Math.pow(this.b,2)-4*this.a*this.c)/(4*this.a);var stringP=-1*this.p>=0?"+"+String(-1*this.p):String(-1*this.p),stringQ=this.q>=0?"+"+String(this.q):String(this.q);this.standardForm="".concat(stringA,"(x").concat(stringP,")^2").concat(stringQ)}else if("standard"===Quadratic.judgeForm(formula)){var array=formula.replace(/\s/g,"").split(/\(|\)|\+|x|\^2/).filter((function(v){return v}));this.a=Number(array[0]),this.p=-1*Number(array[1]),this.q=Number(array[2]);var stringA=String(this.a),stringP=-1*this.p>=0?"+"+String(-1*this.p):String(-1*this.p),stringQ=this.q>=0?"+"+String(this.q):String(this.q);this.standardForm="".concat(stringA,"(x").concat(stringP,")^2").concat(stringQ),this.b=-2*this.a*this.p,this.c=this.a*Math.pow(this.p,2)+this.q;var stringB=this.b>=0?"+"+String(this.b):String(this.b),stringC=this.c>=0?"+"+String(this.c):String(this.c);this.vertexForm="".concat(stringA,"x^2").concat(stringB,"x").concat(stringC)}},Quadratic.prototype.getVertex=function(){return new Point(this.p,this.q)},Quadratic.prototype.getY=function(x){return this.a*Math.pow(x,2)+this.b*x+this.c},Quadratic.prototype.getYIntercept=function(){return new Point(0,this.getY(0))},Quadratic.prototype.getSymmetricQuadratic=function(center){var a=-this.a,p=-Point.getSymmetricPoint(this.getVertex(),center).x,q=Point.getSymmetricPoint(this.getVertex(),center).y;return new Quadratic("".concat(a,"(x +").concat(p,")^2 + ").concat(q))},Quadratic.prototype.getIntersectionsOfQL=function(linear){var a=this.a,b=this.b,c=this.c,d=linear.slope,e=linear.yIntercept,x1=(d-b+Math.sqrt(Math.pow(b-d,2)-4*a*(c-e)))/(2*a),y1=d*x1+e,x2=(d-b-Math.sqrt(Math.pow(b-d,2)-4*a*(c-e)))/(2*a),y2=d*x2+e;return[new Point(x1,y1),new Point(x2,y2)]},Quadratic.prototype.getIntersectionsOfQQ=function(quadratic){var a=this.a,b=this.b,c=this.c,d=quadratic.a,e=quadratic.b,f=quadratic.c;if(a===d){var x=(f-c)/(b-e),y=a*Math.pow(x,2)+b*x+c;return[new Point(x,y),new Point(NaN,NaN)]}var x1=(e-b+Math.sqrt(Math.pow(b-e,2)-4*(a-d)*(c-f)))/(2*(a-d)),y1=a*Math.pow(x1,2)+b*x1+c,x2=(e-b-Math.sqrt(Math.pow(b-e,2)-4*(a-d)*(c-f)))/(2*(a-d)),y2=a*Math.pow(x2,2)+b*x2+c;return[new Point(x1,y1),new Point(x2,y2)]},Quadratic.prototype.getTangentLinear=function(x){var a=this.a,b,c,d=4*a*x+this.b,e=this.c-4*a*Math.pow(x,2);return new Linear("".concat(d,"x+").concat(e))},Quadratic.prototype.getSolution=function(){return this.getIntersectionsOfQL(new Linear("0x+0"))},Quadratic.prototype.magnify=function(center,magnification){var l1=new Line(center,this.getYIntercept()),l2=new Line(center,new Point(-5,this.getY(-5))),l3=new Line(center,new Point(5,this.getY(5))),p1=l1.getDividingPoint(-magnification,magnification-1),p2=l2.getDividingPoint(-magnification,magnification-1),p3=l3.getDividingPoint(-magnification,magnification-1);return Quadratic.estimateQuadraticByThreePoints(p1,p2,p3)},Quadratic.prototype.moveQuadratic=function(x,y){var newP=-(this.p+x),newQ=this.q+y;return new Quadratic("".concat(this.a,"(x+").concat(newP,")^2+").concat(newQ))},Quadratic.estimateQuadraticByAandTwoPoints=function(a,p1,p2){var x1=p1.x,y1=p1.y,x2=p2.x,y2,b=(p2.y-y1-a*(Math.pow(x2,2)-Math.pow(x1,2)))/(x2-x1),c=y1-a*Math.pow(x1,2)-b*Math.pow(x1,2);return new Quadratic("".concat(a,"x^2+").concat(b,"x+").concat(c))},Quadratic.estimateQuadraticByThreePoints=function(p1,p2,p3){var x1=p1.x,y1=p1.y,x2=p2.x,y2=p2.y,x3=p3.x,y3=p3.y,b=((y3-y1)*Math.pow(x2,2)-(y3-y1)*Math.pow(x1,2)-((y2-y1)*Math.pow(x3,2)-(y2-y1)*Math.pow(x1,2)))/((x2-x1)*(Math.pow(x1,2)-Math.pow(x3,2))-(x3-x1)*(Math.pow(x1,2)-Math.pow(x2,2))),a=(y2-y1-b*(x2-x1))/(Math.pow(x2,2)-Math.pow(x1,2)),c=y1-a*Math.pow(x1,2)-b*x1;return new Quadratic("".concat(a,"x^2+").concat(b,"x+").concat(c))},Quadratic.prototype.draw=function(min,max){beginShape();for(var x=min;x<max;x++){var y=this.getY(x);vertex(x,y)}endShape()},Quadratic}();